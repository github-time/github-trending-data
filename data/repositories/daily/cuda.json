{"updateTime":"2025-07-11 02:32:26","data":[{"full_name":"","description":"FlashInfer: Kernel Library for LLM Serving","currentPeriodStars":10,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":3339,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/11773619?s=40&v=4","login":"yzh119"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/11773619?s=40&v=4","login":"yzh119"},{"avatar_url":"https://avatars.githubusercontent.com/u/2470081?s=40&v=4","login":"abcdabcd987"},{"avatar_url":"https://avatars.githubusercontent.com/u/45167100?s=40&v=4","login":"MasterJH5574"},{"avatar_url":"https://avatars.githubusercontent.com/u/46627482?s=40&v=4","login":"zhyncs"},{"avatar_url":"https://avatars.githubusercontent.com/u/52445717?s=40&v=4","login":"yyihuang"}]},{"full_name":"","description":"Instant neural graphics primitives: lightning fast NeRF and more","currentPeriodStars":6,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":16753,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/4923655?s=40&v=4","login":"Tom94"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/4923655?s=40&v=4","login":"Tom94"},{"avatar_url":"https://avatars.githubusercontent.com/u/7601391?s=40&v=4","login":"FlorisE"},{"avatar_url":"https://avatars.githubusercontent.com/u/29726242?s=40&v=4","login":"jc211"},{"avatar_url":"https://avatars.githubusercontent.com/u/7057863?s=40&v=4","login":"yenchenlin"},{"avatar_url":"https://avatars.githubusercontent.com/u/3280839?s=40&v=4","login":"JamesPerlman"}]},{"full_name":"","description":"FlashMLA: Efficient MLA decoding kernels","currentPeriodStars":2,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":11642,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/31004720?s=40&v=4","login":"beginlner"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/31004720?s=40&v=4","login":"beginlner"},{"avatar_url":"https://avatars.githubusercontent.com/u/16120401?s=40&v=4","login":"sijiac"},{"avatar_url":"https://avatars.githubusercontent.com/u/30743214?s=40&v=4","login":"interestingLSY"},{"avatar_url":"https://avatars.githubusercontent.com/u/30207895?s=40&v=4","login":"KnowingNothing"},{"avatar_url":"https://avatars.githubusercontent.com/u/2911134?s=40&v=4","login":"chunyang-wen"}]},{"full_name":"","description":"DeepEP: an efficient expert-parallel communication library","currentPeriodStars":4,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":8265,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/35299455?s=40&v=4","login":"LyricZhao"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/35299455?s=40&v=4","login":"LyricZhao"},{"avatar_url":"https://avatars.githubusercontent.com/u/9213347?s=40&v=4","login":"sphish"},{"avatar_url":"https://avatars.githubusercontent.com/u/5236035?s=40&v=4","login":"fzyzcjy"},{"avatar_url":"https://avatars.githubusercontent.com/u/23236638?s=40&v=4","login":"youkaichao"},{"avatar_url":"https://avatars.githubusercontent.com/u/16082130?s=40&v=4","login":"haswelliris"}]},{"full_name":"","description":"CUDA Kernel Benchmarking Library","currentPeriodStars":1,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":680,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"alliepiper"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"alliepiper"},{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},{"avatar_url":"https://avatars.githubusercontent.com/u/215756?s=40&v=4","login":"robertmaynard"},{"avatar_url":"https://avatars.githubusercontent.com/u/12716979?s=40&v=4","login":"PointKernel"},{"avatar_url":"https://avatars.githubusercontent.com/u/1538165?s=40&v=4","login":"vyasr"}]},{"full_name":"","description":"Tile primitives for speedy kernels","currentPeriodStars":4,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":2513,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/11230781?s=40&v=4","login":"benjaminfspector"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/11230781?s=40&v=4","login":"benjaminfspector"},{"avatar_url":"https://avatars.githubusercontent.com/u/48185825?s=40&v=4","login":"Aaryan0404"},{"avatar_url":"https://avatars.githubusercontent.com/u/29069240?s=40&v=4","login":"simran-arora"},{"avatar_url":"https://avatars.githubusercontent.com/u/31910389?s=40&v=4","login":"StuartSul"},{"avatar_url":"https://avatars.githubusercontent.com/u/72822184?s=40&v=4","login":"dylanllim"}]},{"full_name":"","description":"LLM training in simple, raw C/CUDA","currentPeriodStars":10,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":27111,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/241138?s=40&v=4","login":"karpathy"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/241138?s=40&v=4","login":"karpathy"},{"avatar_url":"https://avatars.githubusercontent.com/u/7938269?s=40&v=4","login":"ngc92"},{"avatar_url":"https://avatars.githubusercontent.com/u/29271842?s=40&v=4","login":"gordicaleksa"},{"avatar_url":"https://avatars.githubusercontent.com/u/7082233?s=40&v=4","login":"ademeure"},{"avatar_url":"https://avatars.githubusercontent.com/u/55313766?s=40&v=4","login":"rosslwheeler"}]},{"full_name":"","description":"CUDA accelerated rasterization of gaussian splatting","currentPeriodStars":3,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":3284,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/10151885?s=40&v=4","login":"liruilong940607"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/10151885?s=40&v=4","login":"liruilong940607"},{"avatar_url":"https://avatars.githubusercontent.com/u/5694811?s=40&v=4","login":"vye16"},{"avatar_url":"https://avatars.githubusercontent.com/u/30566358?s=40&v=4","login":"maturk"},{"avatar_url":"https://avatars.githubusercontent.com/u/15806475?s=40&v=4","login":"kerrj"},{"avatar_url":"https://avatars.githubusercontent.com/u/6992947?s=40&v=4","login":"brentyi"}]},{"full_name":"","description":"NVIDIA cuOpt is an open-source GPU-accelerated optimization engine delivering near real-time solutions for complex decision-making challenges.","currentPeriodStars":2,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":270,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/42624703?s=40&v=4","login":"rgsl888prabhu"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/42624703?s=40&v=4","login":"rgsl888prabhu"},{"avatar_url":"https://avatars.githubusercontent.com/u/184431765?s=40&v=4","login":"chris-maes"},{"avatar_url":"https://avatars.githubusercontent.com/u/6844564?s=40&v=4","login":"rg20"},{"avatar_url":"https://avatars.githubusercontent.com/u/31096601?s=40&v=4","login":"Kh4ster"},{"avatar_url":"https://avatars.githubusercontent.com/u/160623740?s=40&v=4","login":"aliceb-nv"}]},{"full_name":"","description":"Causal depthwise conv1d in CUDA, with a PyTorch interface","currentPeriodStars":1,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":510,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/5616128?s=40&v=4","login":"tridao"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/5616128?s=40&v=4","login":"tridao"},{"avatar_url":"https://avatars.githubusercontent.com/u/164261418?s=40&v=4","login":"ajassani"},{"avatar_url":"https://avatars.githubusercontent.com/u/32954280?s=40&v=4","login":"mayank31398"},{"avatar_url":"https://avatars.githubusercontent.com/u/22727137?s=40&v=4","login":"johnnynunez"},{"avatar_url":"https://avatars.githubusercontent.com/u/158011354?s=40&v=4","login":"amoskvic"}]},{"full_name":"","description":"NCCL Tests","currentPeriodStars":1,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1176,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/2538330?s=40&v=4","login":"AddyLaddy"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/2538330?s=40&v=4","login":"AddyLaddy"},{"avatar_url":"https://avatars.githubusercontent.com/u/12857445?s=40&v=4","login":"sjeaugey"},{"avatar_url":"https://avatars.githubusercontent.com/u/2293859?s=40&v=4","login":"jbachan"},{"avatar_url":"https://avatars.githubusercontent.com/u/687269?s=40&v=4","login":"lukeyeager"},{"avatar_url":"https://avatars.githubusercontent.com/u/6690627?s=40&v=4","login":"jithinjosepkl"}]},{"full_name":"","description":"CUDA Library Samples","currentPeriodStars":2,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":2013,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/50021634?s=40&v=4","login":"mnicely"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/50021634?s=40&v=4","login":"mnicely"},{"avatar_url":"https://avatars.githubusercontent.com/u/50413820?s=40&v=4","login":"fbusato"},{"avatar_url":"https://avatars.githubusercontent.com/u/20576829?s=40&v=4","login":"almogsegal"},{"avatar_url":"https://avatars.githubusercontent.com/u/15225631?s=40&v=4","login":"rsdubtso"},{"avatar_url":"https://avatars.githubusercontent.com/u/1907101?s=40&v=4","login":"mrogowski"}]},{"full_name":"","description":"[ARCHIVED] Cooperative primitives for CUDA C++. See https://github.com/NVIDIA/cccl","currentPeriodStars":1,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1758,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"alliepiper"},{"avatar_url":"https://avatars.githubusercontent.com/u/1476032?s=40&v=4","login":"dumerrill"},{"avatar_url":"https://avatars.githubusercontent.com/u/398194?s=40&v=4","login":"brycelelbach"},{"avatar_url":"https://avatars.githubusercontent.com/u/3958403?s=40&v=4","login":"elstehle"}]},{"full_name":"","description":"This is a series of GPU optimization topics. Here we will introduce how to optimize the CUDA kernel in detail. I will introduce several basic kernel optimizations, including: elementwise, reduce, sgemv, sgemm, etc. The performance of these kernels is basically at or near the theoretical limit.","currentPeriodStars":2,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1088,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/85323580?s=40&v=4","login":"Liu-xiandong"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/85323580?s=40&v=4","login":"Liu-xiandong"},{"avatar_url":"https://avatars.githubusercontent.com/u/63796752?s=40&v=4","login":"ZhangGe6"}]}]}