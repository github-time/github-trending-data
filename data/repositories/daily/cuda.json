{"updateTime":"2023-12-16 02:19:46","data":[{"full_name":"","description":"CUDA accelerated rasterization of gaussian splatting","currentPeriodStars":5,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":402,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/5694811?s=40&v=4","login":"vye16"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/5694811?s=40&v=4","login":"vye16"},{"avatar_url":"https://avatars.githubusercontent.com/u/30566358?s=40&v=4","login":"maturk"},{"avatar_url":"https://avatars.githubusercontent.com/u/10151885?s=40&v=4","login":"liruilong940607"},{"avatar_url":"https://avatars.githubusercontent.com/u/102644383?s=40&v=4","login":"Zhuoyang-Pan"},{"avatar_url":"https://avatars.githubusercontent.com/u/6992947?s=40&v=4","login":"brentyi"}]},{"full_name":"","description":"Instant neural graphics primitives: lightning fast NeRF and more","currentPeriodStars":8,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":14592,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/4923655?s=40&v=4","login":"Tom94"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/4923655?s=40&v=4","login":"Tom94"},{"avatar_url":"https://avatars.githubusercontent.com/u/7601391?s=40&v=4","login":"FlorisE"},{"avatar_url":"https://avatars.githubusercontent.com/u/29726242?s=40&v=4","login":"jc211"},{"avatar_url":"https://avatars.githubusercontent.com/u/7057863?s=40&v=4","login":"yenchenlin"},{"avatar_url":"https://avatars.githubusercontent.com/u/3280839?s=40&v=4","login":"JamesPerlman"}]},{"full_name":"","description":"NCCL Tests","currentPeriodStars":0,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":559,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/2538330?s=40&v=4","login":"AddyLaddy"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/2538330?s=40&v=4","login":"AddyLaddy"},{"avatar_url":"https://avatars.githubusercontent.com/u/12857445?s=40&v=4","login":"sjeaugey"},{"avatar_url":"https://avatars.githubusercontent.com/u/687269?s=40&v=4","login":"lukeyeager"},{"avatar_url":"https://avatars.githubusercontent.com/u/2293859?s=40&v=4","login":"jbachan"},{"avatar_url":"https://avatars.githubusercontent.com/u/6690627?s=40&v=4","login":"jithinjosepkl"}]},{"full_name":"","description":"","currentPeriodStars":0,"stargazers_count":0,"forks_count":0,"owner":{},"buildBy":[]},{"full_name":"","description":"This is a series of GPU optimization topics. Here we will introduce how to optimize the CUDA kernel in detail. I will introduce several basic kernel optimizations, including: elementwise, reduce, sgemv, sgemm, etc. The performance of these kernels is basically at or near the theoretical limit.","currentPeriodStars":4,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":494,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/85323580?s=40&v=4","login":"Liu-xiandong"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/85323580?s=40&v=4","login":"Liu-xiandong"},{"avatar_url":"https://avatars.githubusercontent.com/u/63796752?s=40&v=4","login":"ZhangGe6"}]},{"full_name":"","description":"CUDA Library Samples","currentPeriodStars":0,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":995,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/50021634?s=40&v=4","login":"mnicely"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/50021634?s=40&v=4","login":"mnicely"},{"avatar_url":"https://avatars.githubusercontent.com/u/50413820?s=40&v=4","login":"fbusato"},{"avatar_url":"https://avatars.githubusercontent.com/u/5178240?s=40&v=4","login":"springer13"},{"avatar_url":"https://avatars.githubusercontent.com/u/20576829?s=40&v=4","login":"almogsegal"},{"avatar_url":"https://avatars.githubusercontent.com/u/1217114?s=40&v=4","login":"llukas"}]},{"full_name":"","description":"","currentPeriodStars":0,"stargazers_count":0,"forks_count":0,"owner":{},"buildBy":[]},{"full_name":"","description":"GPU code to generate mandelbrot set","currentPeriodStars":0,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":0,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/1252580?s=40&v=4","login":"artvandelay"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/1252580?s=40&v=4","login":"artvandelay"}]},{"full_name":"","description":"","currentPeriodStars":0,"stargazers_count":0,"forks_count":0,"owner":{},"buildBy":[]},{"full_name":"","description":"cuGraph - RAPIDS Graph Analytics Library","currentPeriodStars":1,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1467,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/34135411?s=40&v=4","login":"BradReesWork"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/34135411?s=40&v=4","login":"BradReesWork"},{"avatar_url":"https://avatars.githubusercontent.com/u/45606510?s=40&v=4","login":"afender"},{"avatar_url":"https://avatars.githubusercontent.com/u/45364586?s=40&v=4","login":"ChuckHastings"},{"avatar_url":"https://avatars.githubusercontent.com/u/45857425?s=40&v=4","login":"seunghwak"},{"avatar_url":"https://avatars.githubusercontent.com/u/41401566?s=40&v=4","login":"Iroy30"}]},{"full_name":"","description":"RAFT contains fundamental widely-used algorithms and primitives for machine learning and information retrieval. The algorithms are CUDA-accelerated and form building blocks for more easily writing high performance applications.","currentPeriodStars":2,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":490,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/1242464?s=40&v=4","login":"cjnolet"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/1242464?s=40&v=4","login":"cjnolet"},{"avatar_url":"https://avatars.githubusercontent.com/u/38199262?s=40&v=4","login":"GPUtester"},{"avatar_url":"https://avatars.githubusercontent.com/u/37386037?s=40&v=4","login":"aschaffer"},{"avatar_url":"https://avatars.githubusercontent.com/u/14876585?s=40&v=4","login":"divyegala"},{"avatar_url":"https://avatars.githubusercontent.com/u/45857425?s=40&v=4","login":"seunghwak"}]},{"full_name":"","description":"how to optimize some algorithm in cuda.","currentPeriodStars":2,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":671,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/35585791?s=40&v=4","login":"BBuf"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/35585791?s=40&v=4","login":"BBuf"},{"avatar_url":"https://avatars.githubusercontent.com/u/67543126?s=40&v=4","login":"peakcrosser7"}]},{"full_name":"","description":"[ARCHIVED] Cooperative primitives for CUDA C++. See https://github.com/NVIDIA/cccl","currentPeriodStars":0,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1610,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"allisonvacanti"},{"avatar_url":"https://avatars.githubusercontent.com/u/1476032?s=40&v=4","login":"dumerrill"},{"avatar_url":"https://avatars.githubusercontent.com/u/398194?s=40&v=4","login":"brycelelbach"},{"avatar_url":"https://avatars.githubusercontent.com/u/3958403?s=40&v=4","login":"elstehle"}]}]}