{"updateTime":"2025-04-06 02:25:53","data":[{"full_name":"","description":"Tile primitives for speedy kernels","currentPeriodStars":34,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":2224,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/11230781?s=40&v=4","login":"benjaminfspector"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/11230781?s=40&v=4","login":"benjaminfspector"},{"avatar_url":"https://avatars.githubusercontent.com/u/48185825?s=40&v=4","login":"Aaryan0404"},{"avatar_url":"https://avatars.githubusercontent.com/u/29069240?s=40&v=4","login":"simran-arora"},{"avatar_url":"https://avatars.githubusercontent.com/u/31910389?s=40&v=4","login":"StuartSul"},{"avatar_url":"https://avatars.githubusercontent.com/u/72822184?s=40&v=4","login":"dylanllim"}]},{"full_name":"","description":"CUDA Kernel Benchmarking Library","currentPeriodStars":9,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":607,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"alliepiper"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"alliepiper"},{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},{"avatar_url":"https://avatars.githubusercontent.com/u/215756?s=40&v=4","login":"robertmaynard"},{"avatar_url":"https://avatars.githubusercontent.com/u/12716979?s=40&v=4","login":"PointKernel"},{"avatar_url":"https://avatars.githubusercontent.com/u/1538165?s=40&v=4","login":"vyasr"}]},{"full_name":"","description":"cuGraph - RAPIDS Graph Analytics Library","currentPeriodStars":10,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1930,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/34135411?s=40&v=4","login":"BradReesWork"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/34135411?s=40&v=4","login":"BradReesWork"},{"avatar_url":"https://avatars.githubusercontent.com/u/45606510?s=40&v=4","login":"afender"},{"avatar_url":"https://avatars.githubusercontent.com/u/45857425?s=40&v=4","login":"seunghwak"},{"avatar_url":"https://avatars.githubusercontent.com/u/45364586?s=40&v=4","login":"ChuckHastings"},{"avatar_url":"https://avatars.githubusercontent.com/u/41401566?s=40&v=4","login":"Iroy30"}]},{"full_name":"","description":"Distributed multigrid linear solver library on GPU","currentPeriodStars":4,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":546,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/9931059?s=40&v=4","login":"mattmartineau"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/9931059?s=40&v=4","login":"mattmartineau"},{"avatar_url":"https://avatars.githubusercontent.com/u/32493426?s=40&v=4","login":"marsaev"},{"avatar_url":"https://avatars.githubusercontent.com/u/65027571?s=40&v=4","login":"gonzalobg"},{"avatar_url":"https://avatars.githubusercontent.com/u/51991688?s=40&v=4","login":"mhrywniak"},{"avatar_url":"https://avatars.githubusercontent.com/u/971921?s=40&v=4","login":"ibaned"}]},{"full_name":"","description":"Instant neural graphics primitives: lightning fast NeRF and more","currentPeriodStars":31,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":16464,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/4923655?s=40&v=4","login":"Tom94"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/4923655?s=40&v=4","login":"Tom94"},{"avatar_url":"https://avatars.githubusercontent.com/u/7601391?s=40&v=4","login":"FlorisE"},{"avatar_url":"https://avatars.githubusercontent.com/u/29726242?s=40&v=4","login":"jc211"},{"avatar_url":"https://avatars.githubusercontent.com/u/7057863?s=40&v=4","login":"yenchenlin"},{"avatar_url":"https://avatars.githubusercontent.com/u/3280839?s=40&v=4","login":"JamesPerlman"}]},{"full_name":"","description":"LLM training in simple, raw C/CUDA","currentPeriodStars":80,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":26245,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/241138?s=40&v=4","login":"karpathy"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/241138?s=40&v=4","login":"karpathy"},{"avatar_url":"https://avatars.githubusercontent.com/u/7938269?s=40&v=4","login":"ngc92"},{"avatar_url":"https://avatars.githubusercontent.com/u/29271842?s=40&v=4","login":"gordicaleksa"},{"avatar_url":"https://avatars.githubusercontent.com/u/7082233?s=40&v=4","login":"ademeure"},{"avatar_url":"https://avatars.githubusercontent.com/u/55313766?s=40&v=4","login":"rosslwheeler"}]},{"full_name":"","description":"Quantized Attention that achieves speedups of 2.1-3.1x and 2.7-5.1x compared to FlashAttention2 and xformers, respectively, without lossing end-to-end metrics across various models.","currentPeriodStars":26,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1250,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/59364182?s=40&v=4","login":"jt-zhang"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/59364182?s=40&v=4","login":"jt-zhang"},{"avatar_url":"https://avatars.githubusercontent.com/u/110245937?s=40&v=4","login":"jason-huang03"},{"avatar_url":"https://avatars.githubusercontent.com/u/31974251?s=40&v=4","login":"DefTruth"},{"avatar_url":"https://avatars.githubusercontent.com/u/19153797?s=40&v=4","login":"Panchovix"}]},{"full_name":"","description":"This is a series of GPU optimization topics. Here we will introduce how to optimize the CUDA kernel in detail. I will introduce several basic kernel optimizations, including: elementwise, reduce, sgemv, sgemm, etc. The performance of these kernels is basically at or near the theoretical limit.","currentPeriodStars":11,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":979,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/85323580?s=40&v=4","login":"Liu-xiandong"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/85323580?s=40&v=4","login":"Liu-xiandong"},{"avatar_url":"https://avatars.githubusercontent.com/u/63796752?s=40&v=4","login":"ZhangGe6"}]},{"full_name":"","description":"CUDA Library Samples","currentPeriodStars":15,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1862,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/50021634?s=40&v=4","login":"mnicely"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/50021634?s=40&v=4","login":"mnicely"},{"avatar_url":"https://avatars.githubusercontent.com/u/50413820?s=40&v=4","login":"fbusato"},{"avatar_url":"https://avatars.githubusercontent.com/u/20576829?s=40&v=4","login":"almogsegal"},{"avatar_url":"https://avatars.githubusercontent.com/u/5178240?s=40&v=4","login":"springer13"},{"avatar_url":"https://avatars.githubusercontent.com/u/15225631?s=40&v=4","login":"rsdubtso"}]},{"full_name":"","description":"[ARCHIVED] Cooperative primitives for CUDA C++. See https://github.com/NVIDIA/cccl","currentPeriodStars":4,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":1740,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/9890394?s=40&v=4","login":"gevtushenko"},{"avatar_url":"https://avatars.githubusercontent.com/u/58744?s=40&v=4","login":"alliepiper"},{"avatar_url":"https://avatars.githubusercontent.com/u/1476032?s=40&v=4","login":"dumerrill"},{"avatar_url":"https://avatars.githubusercontent.com/u/398194?s=40&v=4","login":"brycelelbach"},{"avatar_url":"https://avatars.githubusercontent.com/u/3958403?s=40&v=4","login":"elstehle"}]},{"full_name":"","description":"","currentPeriodStars":0,"stargazers_count":0,"forks_count":0,"owner":{},"buildBy":[]},{"full_name":"","description":"","currentPeriodStars":0,"stargazers_count":0,"forks_count":0,"owner":{},"buildBy":[]},{"full_name":"","description":"Causal depthwise conv1d in CUDA, with a PyTorch interface","currentPeriodStars":9,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":428,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/5616128?s=40&v=4","login":"tridao"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/5616128?s=40&v=4","login":"tridao"},{"avatar_url":"https://avatars.githubusercontent.com/u/164261418?s=40&v=4","login":"ajassani"},{"avatar_url":"https://avatars.githubusercontent.com/u/22727137?s=40&v=4","login":"johnnynunez"},{"avatar_url":"https://avatars.githubusercontent.com/u/158011354?s=40&v=4","login":"amoskvic"},{"avatar_url":"https://avatars.githubusercontent.com/u/1236979?s=40&v=4","login":"tlrmchlsmth"}]},{"full_name":"","description":"A massively parallel, optimal functional runtime in Rust","currentPeriodStars":19,"language":"Cuda","languageColor":"#3A4E3A","stargazers_count":10940,"forks_count":0,"owner":{"avatar_url":"https://avatars.githubusercontent.com/u/13090166?s=40&v=4","login":"VictorTaelin"},"buildBy":[{"avatar_url":"https://avatars.githubusercontent.com/u/13090166?s=40&v=4","login":"VictorTaelin"},{"avatar_url":"https://avatars.githubusercontent.com/u/5505315?s=40&v=4","login":"enricozb"},{"avatar_url":"https://avatars.githubusercontent.com/u/53550620?s=40&v=4","login":"kings177"},{"avatar_url":"https://avatars.githubusercontent.com/u/30930225?s=40&v=4","login":"edusporto"},{"avatar_url":"https://avatars.githubusercontent.com/u/44031566?s=40&v=4","login":"tjjfvi"}]}]}