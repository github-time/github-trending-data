{"updateTime":"2025-10-14 02:30:01","data":[{"username":"DefTruth","name":"DefTruth        ","type":"user","url":"https://github.com/DefTruth","avatar":"https://avatars.githubusercontent.com/u/31974251?s=96&v=4","repo":{"name":"CUDA-Learn-Notes","description":"üìö200+ Tensor/CUDA Cores Kernels, ‚ö°Ô∏èflash-attn-mma, ‚ö°Ô∏èhgemm with WMMA, MMA and CuTe (98%~100% TFLOPS of cuBLAS/FA2 üéâüéâ).","url":"https://github.com/DefTruth/CUDA-Learn-Notes"}},{"username":"JINO-ROHIT","name":"JINO ROHIT        ","type":"user","url":"https://github.com/JINO-ROHIT","avatar":"https://avatars.githubusercontent.com/u/63234112?s=96&v=4","repo":{"name":"fastcv","description":"fastcv is a CUDA rewrite of the opencv filters with python bindings","url":"https://github.com/JINO-ROHIT/fastcv"}},{"username":"BBuf","name":"Xiaoyu Zhang        ","type":"user","url":"https://github.com/BBuf","avatar":"https://avatars.githubusercontent.com/u/35585791?s=96&v=4","repo":{"name":"how-to-optim-algorithm-in-cuda","description":"how to optimize some algorithm in cuda.","url":"https://github.com/BBuf/how-to-optim-algorithm-in-cuda"}},{"username":"codereport","name":"Conor Hoekstra        ","type":"user","url":"https://github.com/codereport","avatar":"https://avatars.githubusercontent.com/u/36027403?s=96&v=4","repo":{"name":"array-language-comparisons","description":"A comparison of array languages & libraries: APL, J, BQN, Uiua, Q, Julia, R, NumPy, Nial, Futhark, Dex, Ivy, SaC & ArrayFire.","url":"https://github.com/codereport/array-language-comparisons"}},{"username":"siboehm","name":"Simon Boehm        ","type":"user","url":"https://github.com/siboehm","avatar":"https://avatars.githubusercontent.com/u/14908678?s=96&v=4","repo":{"name":"SGEMM_CUDA","description":"Fast CUDA matrix multiplication from scratch","url":"https://github.com/siboehm/SGEMM_CUDA"}}]}