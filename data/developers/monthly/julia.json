{"updateTime":"2023-12-08 02:20:41","data":[{"username":"fonsp","name":"Fons van der Plas","type":"user","url":"https://github.com/fonsp","avatar":"https://avatars.githubusercontent.com/u/6933510?s=96&v=4","repo":{"name":"Pluto.jl","description":"ðŸŽˆ Simple reactive notebooks for Julia","url":"https://github.com/fonsp/Pluto.jl"}},{"username":"odow","name":"Oscar Dowson","type":"user","url":"https://github.com/odow","avatar":"https://avatars.githubusercontent.com/u/8177701?s=96&v=4","repo":{"name":"SDDP.jl","description":"Stochastic Dual Dynamic Programming in Julia","url":"https://github.com/odow/SDDP.jl"}},{"username":"aviatesk","name":"Shuhei Kadowaki","type":"user","url":"https://github.com/aviatesk","avatar":"https://avatars.githubusercontent.com/u/40514306?s=96&v=4","repo":{"name":"JET.jl","description":"An experimental code analyzer for Julia. No need for additional type annotations.","url":"https://github.com/aviatesk/JET.jl"}},{"username":"ericphanson","name":"Eric Hanson","type":"user","url":"https://github.com/ericphanson","avatar":"https://avatars.githubusercontent.com/u/5846501?s=96&v=4","repo":{"name":"AllocArrays.jl","description":"Arrays that use a dynamically-scoped allocator","url":"https://github.com/ericphanson/AllocArrays.jl"}},{"username":"MasonProtter","name":"Mason Protter","type":"user","url":"https://github.com/MasonProtter","avatar":"https://avatars.githubusercontent.com/u/29157027?s=96&v=4","repo":{"name":"Bumper.jl","description":"Bring Your Own Stack","url":"https://github.com/MasonProtter/Bumper.jl"}}]}