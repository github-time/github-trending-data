{"updateTime":"2024-10-19 02:27:24","data":[{"username":"lexi-lambda","name":"Alexis King","type":"user","url":"https://github.com/lexi-lambda","avatar":"https://avatars.githubusercontent.com/u/759911?s=96&v=4","repo":{"name":"eff","description":"ðŸš§ a work in progress effect system for Haskell ðŸš§","url":"https://github.com/lexi-lambda/eff"}},{"username":"byorgey","name":"Brent Yorgey","type":"user","url":"https://github.com/byorgey","avatar":"https://avatars.githubusercontent.com/u/533859?s=96&v=4","repo":{"name":"factorization-diagrams","description":"Factorization diagrams!","url":"https://github.com/byorgey/factorization-diagrams"}},{"username":"fizruk","name":"Nikolai Kudasov","type":"user","url":"https://github.com/fizruk","avatar":"https://avatars.githubusercontent.com/u/686582?s=96&v=4","repo":{"name":"free-foil","description":"Efficient Type-Safe Capture-Avoiding Substitution for Free (Scoped Monads).","url":"https://github.com/fizruk/free-foil"}},{"username":"nh2","name":"Niklas HambÃ¼chen","type":"user","url":"https://github.com/nh2","avatar":"https://avatars.githubusercontent.com/u/399535?s=96&v=4","repo":{"name":"call-haskell-from-anything","description":"Call Haskell functions from any programming language via serialization and dynamic libraries","url":"https://github.com/nh2/call-haskell-from-anything"}},{"username":"mitchellwrosen","name":"Mitchell Dalvi Rosen","type":"user","url":"https://github.com/mitchellwrosen","avatar":"https://avatars.githubusercontent.com/u/1074598?s=96&v=4","repo":{"name":"tasty-hspec","description":"Hspec provider for tasty","url":"https://github.com/mitchellwrosen/tasty-hspec"}}]}