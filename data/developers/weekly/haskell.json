{"updateTime":"2023-07-10 02:20:09","data":[{"username":"sdiehl","name":"Stephen Diehl","type":"user","url":"https://github.com/sdiehl","avatar":"https://avatars.githubusercontent.com/u/236767?s=96&v=4","repo":{"name":"write-you-a-haskell","description":"Building a modern functional compiler from first principles. (http://dev.stephendiehl.com/fun/)","url":"https://github.com/sdiehl/write-you-a-haskell"}},{"username":"lexi-lambda","name":"Alexis King","type":"user","url":"https://github.com/lexi-lambda","avatar":"https://avatars.githubusercontent.com/u/759911?s=96&v=4","repo":{"name":"eff","description":"ðŸš§ a work in progress effect system for Haskell ðŸš§","url":"https://github.com/lexi-lambda/eff"}},{"username":"lambdageek","name":"Aleksey Kliger (Î»geek)","type":"user","url":"https://github.com/lambdageek","avatar":"https://avatars.githubusercontent.com/u/480437?s=96&v=4","repo":{"name":"unbound-generics","description":"Specify variable binding in syntax trees using GHC.Generics (reimplementation of Unbound)","url":"https://github.com/lambdageek/unbound-generics"}}]}