{"updateTime":"2025-01-25 02:27:05","data":[{"username":"avik-pal","name":"Avik Pal        ","type":"user","url":"https://github.com/avik-pal","avatar":"https://avatars.githubusercontent.com/u/30564094?s=96&v=4","repo":{"name":"DeepLearningBenchmarks","description":"Benchmarks across Deep Learning Frameworks in Julia and Python","url":"https://github.com/avik-pal/DeepLearningBenchmarks"}},{"username":"gdalle","name":"Guillaume Dalle        ","type":"user","url":"https://github.com/gdalle","avatar":"https://avatars.githubusercontent.com/u/22795598?s=96&v=4","repo":{"name":"CheckConcreteStructs.jl","description":"","url":"https://github.com/gdalle/CheckConcreteStructs.jl"}},{"username":"luraess","name":"Ludovic RÃ¤ss        ","type":"user","url":"https://github.com/luraess","avatar":"https://avatars.githubusercontent.com/u/61313342?s=96&v=4","repo":{"name":"ParallelRandomFields.jl","description":"Efficient parallel random field generator for large 3-D problems.","url":"https://github.com/luraess/ParallelRandomFields.jl"}},{"username":"vtjnash","name":"Jameson Nash        ","type":"user","url":"https://github.com/vtjnash","avatar":"https://avatars.githubusercontent.com/u/330950?s=96&v=4","repo":{"name":"Glob.jl","description":"Posix-compliant file name pattern matching","url":"https://github.com/vtjnash/Glob.jl"}},{"username":"lrnv","name":"Oskar Laverny        ","type":"user","url":"https://github.com/lrnv","avatar":"https://avatars.githubusercontent.com/u/15571061?s=96&v=4","repo":{"name":"Copulas.jl","description":"A fully `Distributions.jl`-compliant copula package","url":"https://github.com/lrnv/Copulas.jl"}},{"username":"MilesCranmer","name":"Miles Cranmer        ","type":"user","url":"https://github.com/MilesCranmer","avatar":"https://avatars.githubusercontent.com/u/7593028?s=96&v=4","repo":{"name":"BorrowChecker.jl","description":"A borrow checker for Julia","url":"https://github.com/MilesCranmer/BorrowChecker.jl"}},{"username":"baggepinnen","name":"Fredrik Bagge Carlson        ","type":"user","url":"https://github.com/baggepinnen","avatar":"https://avatars.githubusercontent.com/u/3797491?s=96&v=4","repo":{"name":"LowLevelParticleFilters.jl","description":"State estimation, smoothing and parameter estimation using Kalman and particle filters.","url":"https://github.com/baggepinnen/LowLevelParticleFilters.jl"}},{"username":"tpapp","name":"Tamas K. Papp        ","type":"user","url":"https://github.com/tpapp","avatar":"https://avatars.githubusercontent.com/u/84122?s=96&v=4","repo":{"name":"DynamicHMC.jl","description":"Implementation of robust dynamic Hamiltonian Monte Carlo methods (NUTS) in Julia.","url":"https://github.com/tpapp/DynamicHMC.jl"}},{"username":"MasonProtter","name":"Mason Protter        ","type":"user","url":"https://github.com/MasonProtter","avatar":"https://avatars.githubusercontent.com/u/29157027?s=96&v=4","repo":{"name":"Bumper.jl","description":"Bring Your Own Stack","url":"https://github.com/MasonProtter/Bumper.jl"}},{"username":"odow","name":"Oscar Dowson        ","type":"user","url":"https://github.com/odow","avatar":"https://avatars.githubusercontent.com/u/8177701?s=96&v=4","repo":{"name":"SDDP.jl","description":"A JuMP extension for Stochastic Dual Dynamic Programming","url":"https://github.com/odow/SDDP.jl"}},{"username":"oschulz","name":"Oliver Schulz        ","type":"user","url":"https://github.com/oschulz","avatar":"https://avatars.githubusercontent.com/u/546147?s=96&v=4","repo":{"name":"FunctionChains.jl","description":"Function chains in Julia","url":"https://github.com/oschulz/FunctionChains.jl"}},{"username":"Pangoraw","name":"Paul Berg        ","type":"user","url":"https://github.com/Pangoraw","avatar":"https://avatars.githubusercontent.com/u/9824244?s=96&v=4","repo":{"name":"WasmCompiler.jl","description":"ðŸ§© it's just bytes","url":"https://github.com/Pangoraw/WasmCompiler.jl"}}]}