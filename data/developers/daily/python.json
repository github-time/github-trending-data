{"updateTime":"2025-03-05 02:30:43","data":[{"username":"weblate","name":"Weblate (bot)        ","type":"user","url":"https://github.com/weblate","avatar":"https://avatars.githubusercontent.com/u/1607653?s=96&v=4","repo":{"name":"weblate-wacca","description":"","url":"https://github.com/weblate/weblate-wacca"}},{"username":"a-r-r-o-w","name":"Aryan        ","type":"user","url":"https://github.com/a-r-r-o-w","avatar":"https://avatars.githubusercontent.com/u/72266394?s=96&v=4","repo":{"name":"finetrainers","description":"Memory-optimized training scripts for video models based on Diffusers","url":"https://github.com/a-r-r-o-w/finetrainers"}},{"username":"freddyaboulton","name":"Freddy Boulton        ","type":"user","url":"https://github.com/freddyaboulton","avatar":"https://avatars.githubusercontent.com/u/41651716?s=96&v=4","repo":{"name":"fastrtc","description":"The python library for real-time communication","url":"https://github.com/freddyaboulton/fastrtc"}},{"username":"hinthornw","name":"William FH        ","type":"user","url":"https://github.com/hinthornw","avatar":"https://avatars.githubusercontent.com/u/13333726?s=96&v=4","repo":{"name":"trustcall","description":"Tenacious tool calling built on LangGraph","url":"https://github.com/hinthornw/trustcall"}},{"username":"holtskinner","name":"Holt Skinner        ","type":"user","url":"https://github.com/holtskinner","avatar":"https://avatars.githubusercontent.com/u/13262395?s=96&v=4","repo":{"name":"PossibilisticCMeans","description":"Implementation of Fuzzy C-Means and Possibilistic C-Means","url":"https://github.com/holtskinner/PossibilisticCMeans"}},{"username":"VainF","name":"Gongfan Fang        ","type":"user","url":"https://github.com/VainF","avatar":"https://avatars.githubusercontent.com/u/18592211?s=96&v=4","repo":{"name":"DeepLabV3Plus-Pytorch","description":"Pretrained DeepLabv3 and DeepLabv3+ for Pascal VOC & Cityscapes","url":"https://github.com/VainF/DeepLabV3Plus-Pytorch"}},{"username":"reteps","name":"Pete Stenger        ","type":"user","url":"https://github.com/reteps","avatar":"https://avatars.githubusercontent.com/u/13869303?s=96&v=4","repo":{"name":"redfin","description":"A Python wrapper around redfin's unofficial API.","url":"https://github.com/reteps/redfin"}},{"username":"bdraco","name":"J. Nick Koston        ","type":"user","url":"https://github.com/bdraco","avatar":"https://avatars.githubusercontent.com/u/663432?s=96&v=4","repo":{"name":"yalexs-ble","description":"Bluetooth control of Yale and August locks","url":"https://github.com/bdraco/yalexs-ble"}},{"username":"feifeibear","name":"Jiarui Fang（方佳瑞）        ","type":"user","url":"https://github.com/feifeibear","avatar":"https://avatars.githubusercontent.com/u/5706969?s=96&v=4","repo":{"name":"LLMSpeculativeSampling","description":"Fast inference from large lauguage models via speculative decoding","url":"https://github.com/feifeibear/LLMSpeculativeSampling"}},{"username":"dpkp","name":"Dana Powers        ","type":"user","url":"https://github.com/dpkp","avatar":"https://avatars.githubusercontent.com/u/843444?s=96&v=4","repo":{"name":"kafka-python","description":"Python client for Apache Kafka","url":"https://github.com/dpkp/kafka-python"}},{"username":"zhaochenyang20","name":"Chayenne        ","type":"user","url":"https://github.com/zhaochenyang20","avatar":"https://avatars.githubusercontent.com/u/74843776?s=96&v=4","repo":{"name":"Awesome-ML-SYS-Tutorial","description":"My learning notes/codes for ML SYS.","url":"https://github.com/zhaochenyang20/Awesome-ML-SYS-Tutorial"}},{"username":"lorenzejay","name":"Lorenze Jay        ","type":"user","url":"https://github.com/lorenzejay","avatar":"https://avatars.githubusercontent.com/u/63378463?s=96&v=4","repo":{"name":"contract-analysis-use-case","description":"","url":"https://github.com/lorenzejay/contract-analysis-use-case"}},{"username":"jacobgil","name":"Jacob Gildenblat        ","type":"user","url":"https://github.com/jacobgil","avatar":"https://avatars.githubusercontent.com/u/5342073?s=96&v=4","repo":{"name":"pytorch-grad-cam","description":"Advanced AI Explainability for computer vision. Support for CNNs, Vision Transformers, Classification, Object detection, Segmentation, Im…","url":"https://github.com/jacobgil/pytorch-grad-cam"}},{"username":"ageitgey","name":"Adam Geitgey        ","type":"user","url":"https://github.com/ageitgey","avatar":"https://avatars.githubusercontent.com/u/896692?s=96&v=4","repo":{"name":"face_recognition","description":"The world's simplest facial recognition api for Python and the command line","url":"https://github.com/ageitgey/face_recognition"}},{"username":"awni","name":"Awni Hannun        ","type":"user","url":"https://github.com/awni","avatar":"https://avatars.githubusercontent.com/u/1542805?s=96&v=4","repo":{"name":"speech","description":"A PyTorch Implementation of End-to-End Models for Speech-to-Text","url":"https://github.com/awni/speech"}},{"username":"burnash","name":"Anton Burnashev        ","type":"user","url":"https://github.com/burnash","avatar":"https://avatars.githubusercontent.com/u/264674?s=96&v=4","repo":{"name":"gspread","description":"Google Sheets Python API","url":"https://github.com/burnash/gspread"}},{"username":"m417z","name":"Michael Maltsev        ","type":"user","url":"https://github.com/m417z","avatar":"https://avatars.githubusercontent.com/u/4129781?s=96&v=4","repo":{"name":"winbindex","description":"An index of Windows binaries, including download links for executables such as exe, dll and sys files","url":"https://github.com/m417z/winbindex"}},{"username":"malhotra5","name":"Rohit Malhotra        ","type":"user","url":"https://github.com/malhotra5","avatar":"https://avatars.githubusercontent.com/u/30446202?s=96&v=4","repo":{"name":"Manim-Tutorial","description":"A tutorial for manim, a mathematical animation engine made by 3b1b","url":"https://github.com/malhotra5/Manim-Tutorial"}},{"username":"sayakpaul","name":"Sayak Paul        ","type":"user","url":"https://github.com/sayakpaul","avatar":"https://avatars.githubusercontent.com/u/22957388?s=96&v=4","repo":{"name":"tt-scale-flux","description":"Inference-time scaling of Flux beyond denoising steps.","url":"https://github.com/sayakpaul/tt-scale-flux"}},{"username":"ezyang","name":"Edward Z. Yang        ","type":"user","url":"https://github.com/ezyang","avatar":"https://avatars.githubusercontent.com/u/13564?s=96&v=4","repo":{"name":"ghstack","description":"Submit stacked diffs to GitHub on the command line","url":"https://github.com/ezyang/ghstack"}},{"username":"rom1504","name":"Romain Beaumont        ","type":"user","url":"https://github.com/rom1504","avatar":"https://avatars.githubusercontent.com/u/2346494?s=96&v=4","repo":{"name":"img2dataset","description":"Easily turn large sets of image urls to an image dataset. Can download, resize and package 100M urls in 20h on one machine.","url":"https://github.com/rom1504/img2dataset"}},{"username":"mwaskom","name":"Michael Waskom        ","type":"user","url":"https://github.com/mwaskom","avatar":"https://avatars.githubusercontent.com/u/315810?s=96&v=4","repo":{"name":"seaborn","description":"Statistical data visualization in Python","url":"https://github.com/mwaskom/seaborn"}},{"username":"marklysze","name":"Mark Sze        ","type":"user","url":"https://github.com/marklysze","avatar":"https://avatars.githubusercontent.com/u/66362098?s=96&v=4","repo":{"name":"AutoGenClientTesting","description":"A set of programs that can be used to test an AutoGen Client Class","url":"https://github.com/marklysze/AutoGenClientTesting"}},{"username":"haotian-liu","name":"Haotian Liu        ","type":"user","url":"https://github.com/haotian-liu","avatar":"https://avatars.githubusercontent.com/u/6631389?s=96&v=4","repo":{"name":"LLaVA","description":"[NeurIPS'23 Oral] Visual Instruction Tuning (LLaVA) built towards GPT-4V level capabilities and beyond.","url":"https://github.com/haotian-liu/LLaVA"}},{"username":"shibing624","name":"Ming Xu (徐明)        ","type":"user","url":"https://github.com/shibing624","avatar":"https://avatars.githubusercontent.com/u/10249622?s=96&v=4","repo":{"name":"MedicalGPT","description":"MedicalGPT: Training Your Own Medical GPT Model with ChatGPT Training Pipeline. 训练医疗大模型，实现了包括增量预训练(PT)、有监督微调(SFT)、RLHF、DPO、ORPO、GRPO。","url":"https://github.com/shibing624/MedicalGPT"}}]}