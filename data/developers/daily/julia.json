{"updateTime":"2023-11-20 02:18:48","data":[{"username":"aviatesk","name":"Shuhei Kadowaki","type":"user","url":"https://github.com/aviatesk","avatar":"https://avatars.githubusercontent.com/u/40514306?s=96&v=4","repo":{"name":"JET.jl","description":"An experimental code analyzer for Julia. No need for additional type annotations.","url":"https://github.com/aviatesk/JET.jl"}},{"username":"jverzani","name":"john verzani","type":"user","url":"https://github.com/jverzani","avatar":"https://avatars.githubusercontent.com/u/421708?s=96&v=4","repo":{"name":"SymPyPythonCall.jl","description":"SymPy with PythonCall backend (not PyCall)","url":"https://github.com/jverzani/SymPyPythonCall.jl"}},{"username":"tkf","name":"Takafumi Arakaki","type":"user","url":"https://github.com/tkf","avatar":"https://avatars.githubusercontent.com/u/29282?s=96&v=4","repo":{"name":"BenchmarkCI.jl","description":"","url":"https://github.com/tkf/BenchmarkCI.jl"}},{"username":"Keno","name":"Keno Fischer","type":"user","url":"https://github.com/Keno","avatar":"https://avatars.githubusercontent.com/u/1291671?s=96&v=4","repo":{"name":"InterfaceSpecs.jl","description":"Playground for formal specifications of interfaces in Julia","url":"https://github.com/Keno/InterfaceSpecs.jl"}}]}