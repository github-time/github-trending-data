{"updateTime":"2024-02-05 02:19:57","data":[{"username":"tzemanovic","name":"Tomas Zemanovic","type":"user","url":"https://github.com/tzemanovic","avatar":"https://avatars.githubusercontent.com/u/2284309?s=96&v=4","repo":{"name":"haskell-yesod-realworld-example-app","description":"Exemplary real world application built with Haskell + Yesod","url":"https://github.com/tzemanovic/haskell-yesod-realworld-example-app"}},{"username":"nomeata","name":"Joachim Breitner","type":"user","url":"https://github.com/nomeata","avatar":"https://avatars.githubusercontent.com/u/148037?s=96&v=4","repo":{"name":"inspection-testing","description":"Inspection Testing for Haskell","url":"https://github.com/nomeata/inspection-testing"}},{"username":"HeinrichApfelmus","name":"Heinrich Apfelmus","type":"user","url":"https://github.com/HeinrichApfelmus","avatar":"https://avatars.githubusercontent.com/u/564592?s=96&v=4","repo":{"name":"reactive-banana","description":"Library for functional reactive programming in Haskell.","url":"https://github.com/HeinrichApfelmus/reactive-banana"}},{"username":"JacquesCarette","name":"Jacques Carette","type":"user","url":"https://github.com/JacquesCarette","avatar":"https://avatars.githubusercontent.com/u/1855141?s=96&v=4","repo":{"name":"Drasil","description":"Generate all the things (focusing on research software)","url":"https://github.com/JacquesCarette/Drasil"}},{"username":"parsonsmatt","name":"Matt von Hagen (Parsons)","type":"user","url":"https://github.com/parsonsmatt","avatar":"https://avatars.githubusercontent.com/u/7310112?s=96&v=4","repo":{"name":"class-wrap","description":"A brief example of the various ways to abstract and hook code.","url":"https://github.com/parsonsmatt/class-wrap"}}]}